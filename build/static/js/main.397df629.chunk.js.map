{"version":3,"sources":["components/Products.js","components/filter.js","components/basket.js","App.js","serviceWorker.js","index.js"],"names":["Products","productItems","this","props","products","map","product","className","key","id","href","onClick","handleAddToCard","src","image","alt","title","price","e","handleAddToCart","Component","Filter","count","value","sort","onChange","handleChangeSort","size","handleChangeSize","Basket","cartItems","total","Math","round","inCart","item","final","parseFloat","handleRemoveFromCart","length","alert","App","state","filteredProducts","bind","handleRemoveCart","fetch","then","res","json","data","setState","localStorage","getItem","JSON","parse","target","listProducts","itemPresent","forEach","push","setItem","stringify","index","indexOf","splice","console","log","a","b","undefined","filter","availableSizes","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.397df629.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nclass Products extends Component {\r\n  render() {\r\n    const productItems = this.props.products.map(product => (\r\n      <div className=\"col-md-4\" key={product.id}>\r\n        <div className=\"thumbnail text-center\">\r\n          <a href={`#${product.id}`} onClick={this.props.handleAddToCard}>\r\n            <img src={product.image} alt={product.title} />\r\n            <p>{product.title}</p>\r\n          </a>\r\n          <div>\r\n            <b>{\"$\" + product.price + \" \"}</b>\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              onClick={e => this.props.handleAddToCart(e, product)}\r\n            >\r\n              Add To Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n    return <div className=\"row\">{productItems}</div>;\r\n  }\r\n}\r\n\r\nexport default Products;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">{this.props.count} products found.</div>\r\n        <div className=\"col-md-4\">\r\n          <label>\r\n            Order by\r\n            <select\r\n              className=\"form-control\"\r\n              value={this.props.sort}\r\n              onChange={this.props.handleChangeSort}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"highest\">lowest to highest</option>\r\n              <option value=\"lowest\">highest to lowest</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <div className=\"col-md-4\"></div>\r\n        <label>\r\n          Filter by\r\n          <select\r\n            className=\"form-control\"\r\n            value={this.props.size}\r\n            onChange={this.props.handleChangeSize}\r\n          >\r\n            <option value=\"\">All</option>\r\n            <option value=\"X\">XS</option>\r\n            <option value=\"S\">S</option>\r\n            <option value=\"M\">M</option>\r\n            <option value=\"L\">L</option>\r\n            <option value=\"XL\">XL</option>\r\n            <option value=\"XXL\">XXL</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Basket extends Component {\r\n  render() {\r\n    const { cartItems } = this.props;\r\n    var total = 0;\r\n    total = Math.round(total * 100) / 100;\r\n    const inCart = this.props.cartItems.map(item => {\r\n      var final = item.title;\r\n      final = final + \" X\" + item.count;\r\n      var price = parseFloat(item.price, 10);\r\n      total += price * item.count;\r\n\r\n      return (\r\n        <li>\r\n          {final} = ${item.price * item.count}\r\n          <button\r\n            className=\"btn btn-warning btn-sm text-body \"\r\n            onClick={e => this.props.handleRemoveFromCart(e, item)}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"alert alert-info\">\r\n        {cartItems.length === 0 ? (\r\n          \"Basket is Empty\"\r\n        ) : (\r\n          <div>You have {cartItems.length} products in basket</div>\r\n        )}\r\n        <ul>{inCart}</ul>\r\n        {total > 0 && (\r\n          <div>\r\n            Total: <b>${total}</b>\r\n            <br></br>\r\n            <button\r\n              className=\"float-right btn btn-warning \"\r\n              onClick={() => {\r\n                alert(\"Checkout need to be implemented\");\r\n              }}\r\n            >\r\n              Checkout\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Products from \"./components/Products\";\r\nimport Filter from \"./components/filter\";\r\nimport Basket from \"./components/basket\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      products: [],\r\n      filteredProducts: [],\r\n      cartItems: []\r\n    };\r\n    this.handleChangeSort = this.handleChangeSort.bind(this);\r\n    this.handleChangeSize = this.handleChangeSize.bind(this);\r\n    this.handleAddToCart = this.handleAddToCart.bind(this);\r\n    this.handleRemoveCart = this.handleRemoveCart.bind(this);\r\n  }\r\n  componentWillMount() {\r\n    fetch(\"https://my-json-server.typicode.com/zaidi10/json-data/products\")\r\n      .then(res => res.json())\r\n      .then(data =>\r\n        this.setState({\r\n          products: data,\r\n          filteredProducts: data\r\n        })\r\n      );\r\n\r\n    if (localStorage.getItem(\"cartItems\")) {\r\n      this.setState({\r\n        cartItems: JSON.parse(localStorage.getItem(\"cartItems\"))\r\n      });\r\n    }\r\n  }\r\n  handleChangeSort(e) {\r\n    this.setState({ sort: e.target.value });\r\n\r\n    this.listProducts();\r\n  }\r\n  handleChangeSize(e) {\r\n    this.setState({ size: e.target.value });\r\n    this.listProducts();\r\n  }\r\n  handleAddToCart(e, product) {\r\n    this.setState(state => {\r\n      var itemPresent = false;\r\n      state.cartItems.forEach(item => {\r\n        if (item.id === product.id) {\r\n          item.count += 1;\r\n          itemPresent = true;\r\n        }\r\n      });\r\n      if (itemPresent === false) {\r\n        state.cartItems.push({ ...product, count: 1 });\r\n      }\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n      return state.cartItems;\r\n    });\r\n  }\r\n  handleRemoveCart(e, item) {\r\n    this.setState(state => {\r\n      state.cartItems.forEach(product => {\r\n        if (product.id === item.id) {\r\n          var index = state.cartItems.indexOf(item);\r\n          state.cartItems.splice(index, 1);\r\n        }\r\n      });\r\n      localStorage.setItem(\"cartItems\", JSON.stringify(state.cartItems));\r\n      return state.cartItems;\r\n    });\r\n  }\r\n  listProducts() {\r\n    console.log(this.state.sort);\r\n    console.log(this.state.size);\r\n    this.setState(state => {\r\n      if (state.sort !== \"\") {\r\n        console.log(state);\r\n        state.products.sort((a, b) =>\r\n          state.sort === \"lowest\"\r\n            ? a.price < b.price\r\n              ? 1\r\n              : -1\r\n            : a.price > b.price\r\n              ? 1\r\n              : -1\r\n        );\r\n        console.log(state);\r\n      } else {\r\n        state.products.sort((a, b) => (a.id < b.id ? 1 : -1));\r\n      }\r\n      console.log(state.size !== \"\");\r\n      if (state.size !== \"\" && state.size !== undefined) {\r\n        console.log(\"this if is running\");\r\n        return {\r\n          filteredProducts: state.products.filter(\r\n            product => product.availableSizes.indexOf(state.size) >= 0\r\n          )\r\n        };\r\n      }\r\n      console.log(state);\r\n      return { filteredProducts: state.products };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>E-Commerce Shopping-Cart</h1>\r\n        <hr></hr>\r\n        <div className=\"row>\">\r\n          <div className=\"col-md-8\">\r\n            <Filter\r\n              size={this.state.size}\r\n              sort={this.state.sort}\r\n              handleChangeSize={this.handleChangeSize}\r\n              handleChangeSort={this.handleChangeSort}\r\n              count={this.state.filteredProducts.length}\r\n            />\r\n            <hr />\r\n\r\n            <Products\r\n              products={this.state.filteredProducts}\r\n              handleAddToCart={this.handleAddToCart}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <Basket\r\n              cartItems={this.state.cartItems}\r\n              handleRemoveFromCart={this.handleRemoveCart}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}